diff --git a/opencl-aot/CMakeLists.txt b/opencl-aot/CMakeLists.txt
index 9aa34cfabde1..0e54a16fba62 100644
--- a/opencl-aot/CMakeLists.txt
+++ b/opencl-aot/CMakeLists.txt
@@ -1,16 +1,24 @@
 cmake_minimum_required(VERSION 3.20.0)
 
-set(LLVM_LINK_COMPONENTS
-        ${LLVM_TARGETS_TO_BUILD}
-        Support
-        )
+# When building out-of-tree, we can't use LLVM CMake tooling.
+# To work around this, we just manually do what it would've done usually.
+find_package(LLVM REQUIRED CONFIG)
+
+# We need to explicitly link to all codegen targets we want to use.
+# This will usually be x86 or aarch, as well as SPIRV/AMDGPU/NVPTX.
+set(LLVM_TARGETS_TO_BUILD "" CACHE STRING "LLVM targets to build")
+
+set(llvm_target_libs "")
+foreach(tgt ${LLVM_TARGETS_TO_BUILD})
+  list(APPEND llvm_target_libs "LLVM${tgt}CodeGen")
+endforeach()
 
 include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)
 file(GLOB TARGET_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/source/*.cpp)
 
 set(OPENCL_AOT_PROJECT_NAME opencl-aot)
 
-add_llvm_tool(${OPENCL_AOT_PROJECT_NAME} ${TARGET_SOURCES})
+add_executable(${OPENCL_AOT_PROJECT_NAME} ${TARGET_SOURCES})
 
 if (WIN32)
   # 0x2000: exclude CWD from DLL loading path
@@ -24,5 +32,7 @@ endif()
 
 target_link_libraries(${OPENCL_AOT_PROJECT_NAME}
   PRIVATE
+    LLVMSupport
+    ${llvm_target_libs}
     OpenCL-Headers
     ${OpenCL_LIBRARY})
