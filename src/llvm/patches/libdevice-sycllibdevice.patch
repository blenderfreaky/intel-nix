diff --git a/cmake/modules/SYCLLibdevice.cmake b/cmake/modules/SYCLLibdevice.cmake
index cd9afa88506b..942ad3802137 100644
--- a/cmake/modules/SYCLLibdevice.cmake
+++ b/cmake/modules/SYCLLibdevice.cmake
@@ -1,24 +1,25 @@
 include(CheckCXXCompilerFlag)
-set(obj_binary_dir "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
-set(obj-new-offload_binary_dir "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
+include(GNUInstallDirs)
+set(obj_binary_dir "${CMAKE_INSTALL_LIBDIR}")
+set(obj-new-offload_binary_dir "${CMAKE_INSTALL_LIBDIR}")
 if (MSVC)
   set(obj-suffix obj)
   set(obj-new-offload-suffix new.obj)
-  set(spv_binary_dir "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}")
+  set(spv_binary_dir "${CMAKE_INSTALL_BINDIR}")
   set(install_dest_spv bin)
   set(devicelib_host_static_obj sycl-devicelib-host.lib)
   set(devicelib_host_static_obj-new-offload sycl-devicelib-host.new.lib)
 else()
   set(obj-suffix o)
   set(obj-new-offload-suffix new.o)
-  set(spv_binary_dir "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
+  set(spv_binary_dir "${CMAKE_INSTALL_LIBDIR}")
   set(install_dest_spv lib${LLVM_LIBDIR_SUFFIX})
   set(devicelib_host_static_obj libsycl-devicelib-host.a)
   set(devicelib_host_static_obj-new-offload libsycl-devicelib-host.new.a)
 endif()
 set(spv-suffix spv)
 set(bc-suffix bc)
-set(bc_binary_dir "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
+set(bc_binary_dir "${CMAKE_INSTALL_LIBDIR}")
 set(install_dest_obj lib${LLVM_LIBDIR_SUFFIX})
 set(install_dest_obj-new-offload lib${LLVM_LIBDIR_SUFFIX})
 set(install_dest_bc lib${LLVM_LIBDIR_SUFFIX})
@@ -338,7 +339,7 @@ endfunction()
 # For native builds, sycl-compiler will already include everything we need.
 # For cross builds, we also need native versions of the tools.
 set(sycl-compiler_deps
-  sycl-compiler ${clang_target} ${append-file_target}
+  ${clang_target} ${append-file_target}
   ${clang-offload-bundler_target} ${clang-offload-packager_target}
   ${file-table-tform_target} ${llvm-foreach_target} ${llvm-spirv_target}
   ${sycl-post-link_target})
@@ -347,7 +348,7 @@ set(complex_obj_deps device_complex.h device.h ${sycl-compiler_deps})
 set(cmath_obj_deps device_math.h device.h ${sycl-compiler_deps})
 set(imf_obj_deps device_imf.hpp imf_half.hpp imf_bf16.hpp imf_rounding_op.hpp imf_impl_utils.hpp device.h ${sycl-compiler_deps})
 set(itt_obj_deps device_itt.h spirv_vars.h device.h ${sycl-compiler_deps})
-set(bfloat16_obj_deps sycl-headers ${sycl-compiler_deps})
+set(bfloat16_obj_deps ${sycl-compiler_deps})
 if (NOT MSVC AND UR_SANITIZER_INCLUDE_DIR)
   set(asan_obj_deps
     device.h atomic.hpp spirv_vars.h
