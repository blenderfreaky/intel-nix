diff --git a/cmake/modules/SYCLLibdevice.cmake b/cmake/modules/SYCLLibdevice.cmake
index cd9afa88506b..c267e7e755e5 100644
--- a/cmake/modules/SYCLLibdevice.cmake
+++ b/cmake/modules/SYCLLibdevice.cmake
@@ -1,4 +1,8 @@
 include(CheckCXXCompilerFlag)
+
+set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib${LLVM_LIBDIR_SUFFIX})
+set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
+
 set(obj_binary_dir "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
 set(obj-new-offload_binary_dir "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
 if (MSVC)
@@ -77,7 +81,7 @@ if (WIN32)
   list(APPEND compile_opts -D_ALLOW_ITERATOR_DEBUG_LEVEL_MISMATCH)
 endif()
 
-add_custom_target(libsycldevice)
+add_custom_target(libsycldevice ALL)
 
 set(filetypes obj obj-new-offload spv bc)
 set(filetypes_no_spv obj obj-new-offload bc)
@@ -215,6 +219,7 @@ function(link_bc)
     set( link_flags --internalize --only-needed )
   endif()
 
+  message("abc ${ARG_TARGET} def ${llvm-link_exe}")
   add_custom_command(
     OUTPUT ${ARG_TARGET}.bc
     COMMAND ${llvm-link_exe} ${link_flags} -o ${ARG_TARGET}.bc ${LINK_INPUT_ARG}
@@ -258,6 +263,8 @@ function(process_bc out_file)
 
   set( builtins_opt_lib $<TARGET_PROPERTY:${ARG_LIB_TGT},TARGET_FILE> )
 
+  message("abc ${out_file} def ${prepare_builtins_exe}")
+
   # Add prepare target
   # FIXME: prepare_builtins_exe comes from having included libclc before this.
   # This is brittle.
@@ -338,7 +345,7 @@ endfunction()
 # For native builds, sycl-compiler will already include everything we need.
 # For cross builds, we also need native versions of the tools.
 set(sycl-compiler_deps
-  sycl-compiler ${clang_target} ${append-file_target}
+  ${clang_target} ${append-file_target}
   ${clang-offload-bundler_target} ${clang-offload-packager_target}
   ${file-table-tform_target} ${llvm-foreach_target} ${llvm-spirv_target}
   ${sycl-post-link_target})
@@ -347,7 +354,7 @@ set(complex_obj_deps device_complex.h device.h ${sycl-compiler_deps})
 set(cmath_obj_deps device_math.h device.h ${sycl-compiler_deps})
 set(imf_obj_deps device_imf.hpp imf_half.hpp imf_bf16.hpp imf_rounding_op.hpp imf_impl_utils.hpp device.h ${sycl-compiler_deps})
 set(itt_obj_deps device_itt.h spirv_vars.h device.h ${sycl-compiler_deps})
-set(bfloat16_obj_deps sycl-headers ${sycl-compiler_deps})
+set(bfloat16_obj_deps ${sycl-compiler_deps})
 if (NOT MSVC AND UR_SANITIZER_INCLUDE_DIR)
   set(asan_obj_deps
     device.h atomic.hpp spirv_vars.h
